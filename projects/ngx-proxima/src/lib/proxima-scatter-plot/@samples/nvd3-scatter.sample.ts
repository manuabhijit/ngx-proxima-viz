export const OPTIONS = {
  chart: {
    type: 'scatterChart',
    height: 500,
    color: ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f', '#bcbd22', '#17becf'],
    scatter: {
      onlyCircles: false,
      dispatch: {},
      width: null,
      height: null,
      xDomain: null,
      yDomain: null,
      pointDomain: null,
      xRange: null,
      yRange: null,
      pointRange: null,
      forceX: [],
      forceY: [],
      forcePoint: [],
      interactive: true,
      padDataOuter: 0.1,
      padData: false,
      clipEdge: false,
      clipVoronoi: true,
      showVoronoi: false,
      id: 82099,
      interactiveUpdateDelay: 300,
      showLabels: false,
      margin: { top: 0, right: 0, bottom: 0, left: 0 },
      duration: 500,
      useVoronoi: true,
    },
    showDistX: true,
    showDistY: true,
    duration: 350,
    xAxis: {
      axisLabel: 'X Axis',
      dispatch: {},
      axisLabelDistance: 0,
      staggerLabels: false,
      rotateLabels: 0,
      rotateYLabel: true,
      showMaxMin: true,
      height: 60,
      ticks: null,
      width: 75,
      margin: { top: 0, right: 0, bottom: 0, left: 0 },
      duration: 250,
      orient: 'bottom',
      tickValues: null,
      tickSubdivide: 0,
      tickSize: 6,
      tickPadding: 10,
      domain: [0, 1],
      range: [0, 1],
    },
    yAxis: {
      axisLabel: 'Y Axis',
      axisLabelDistance: -5,
      dispatch: {},
      staggerLabels: false,
      rotateLabels: 0,
      rotateYLabel: true,
      showMaxMin: true,
      height: 60,
      ticks: null,
      width: 75,
      margin: { top: 0, right: 0, bottom: 0, left: 0 },
      duration: 250,
      orient: 'left',
      tickValues: null,
      tickSubdivide: 0,
      tickSize: 6,
      tickPadding: 10,
      domain: [0, 1],
      range: [0, 1],
    },
    zoom: {
      enabled: true,
      scaleExtent: [1, 10],
      useFixedDomain: false,
      useNiceScale: false,
      horizontalOff: false,
      verticalOff: false,
      unzoomEventType: 'dblclick.zoom',
    },
    dispatch: {},
    legend: {
      dispatch: {},
      width: 400,
      height: 20,
      align: true,
      maxKeyLength: 20,
      rightAlign: true,
      padding: 32,
      updateState: true,
      radioButtonMode: false,
      expanded: false,
      vers: 'classic',
      margin: { top: 5, right: 0, bottom: 5, left: 0 },
    },
    distX: { dispatch: {}, margin: { top: 0, right: 0, bottom: 0, left: 0 }, width: 400, size: 8, duration: 250 },
    distY: { dispatch: {}, margin: { top: 0, right: 0, bottom: 0, left: 0 }, width: 400, size: 8, duration: 250 },
    tooltip: {
      duration: 100,
      gravity: 'w',
      distance: 25,
      snapDistance: 0,
      classes: null,
      chartContainer: null,
      enabled: true,
      hideDelay: 200,
      headerEnabled: true,
      fixedTop: null,
      offset: { left: 0, top: 0 },
      hidden: true,
      data: null,
      id: 'nvtooltip-46025',
    },
    width: null,
    xDomain: null,
    yDomain: null,
    pointDomain: null,
    xRange: null,
    yRange: null,
    pointRange: null,
    forceX: [],
    forceY: [],
    forcePoint: [],
    interactive: true,
    padDataOuter: 0.1,
    padData: false,
    clipEdge: false,
    clipVoronoi: true,
    showVoronoi: false,
    interactiveUpdateDelay: 300,
    showLabels: false,
    margin: { top: 30, right: 20, bottom: 50, left: 75 },
    useVoronoi: true,
    container: null,
    showLegend: true,
    showXAxis: true,
    showYAxis: true,
    defaultState: null,
    noData: null,
    rightAlignYAxis: false,
  },
  title: { enable: false, text: 'Write Your Title', className: 'h4', css: { width: 'nullpx', textAlign: 'center' } },
  subtitle: { enable: false, text: 'Write Your Subtitle', css: { width: 'nullpx', textAlign: 'center' } },
  caption: { enable: false, text: 'Figure 1. Write Your Caption text.', css: { width: 'nullpx', textAlign: 'center' } },
  styles: { classes: { 'with-3d-shadow': true, 'with-transitions': true, gallery: false }, css: {} },
};

export const DATA = generateData(4, 4);

function generateData(groups, points) {
  let data = [];
  let shapes = ['circle', 'cross', 'triangle-up', 'triangle-down', 'diamond', 'square'];

  for (var i = 0; i < groups; i++) {
    data.push({
      key: 'Group ' + (i + 1),
      values: [],
    });

    for (var j = 0; j < points; j++) {
      data[i].values.push({
        x: Math.floor(Math.random() * 100),
        y: Math.floor(Math.random() * 100),
        size: Math.random(),
        shape: shapes[j % 6],
      });
    }
  }
  return data;
}
